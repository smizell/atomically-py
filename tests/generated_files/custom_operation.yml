components:
  parameters:
    Email:
      in: query
      name: email
      schema:
        type: string
  schemas:
    Customer:
      properties:
        active:
          type: boolean
        email:
          type: string
        name:
          type: string
      type: object
    CustomerCollection:
      properties:
        items:
          items:
            $ref: '#/components/schemas/CustomerItem'
          type: array
        nextUrl:
          description: Next link to be used with pagination
          format: url
          type: string
      required:
      - items
      type: object
    CustomerItem:
      properties:
        active:
          type: boolean
        createdAt:
          description: Date-time the resource was created
          format: date-time
          readOnly: true
          type: string
        email:
          type: string
        id:
          description: ID of the resource
          readOnly: true
          type: string
        name:
          type: string
        updatedAt:
          description: Date-time the resource was updated
          format: date-time
          readOnly: true
          type: string
      required:
      - id
      - createdAt
      - updatedAt
      type: object
    CustomerSort:
      properties:
        customer_ids:
          description: Customer IDs to short
          items:
            type: string
          type: array
      type: object
    Error:
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.  It may or may not yield further information if dereferenced
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: string
        title:
          description: A short, human-readable summary of the problem type
          type: string
        type:
          description: URI reference that identifies the problem type
          type: string
      type: object
info:
  description: Example
  title: Example
  version: 1.0.0
openapi: 3.1.0
paths:
  /customers:
    get:
      operationId: list_customer
      parameters:
      - $ref: '#/components/parameters/Email'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCollection'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: List Customer
      tags:
      - Customer
    post:
      operationId: create_customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Create Customer
      tags:
      - Customer
  /customers/sort:
    post:
      operationId: sort_customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCollection'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Sort Customer
      tags:
      - Customer
  /customers/{customer_id}:
    delete:
      operationId: delete_customer
      parameters:
      - in: path
        name: customer_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Delete Customer
      tags:
      - Customer
    get:
      operationId: read_customer
      parameters:
      - in: path
        name: customer_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Read Customer
      tags:
      - Customer
    put:
      operationId: update_customer
      parameters:
      - in: path
        name: customer_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Update Customer
      tags:
      - Customer
  /customers/{customer_id}/archive:
    post:
      operationId: archive_customer
      parameters:
      - in: path
        name: customer_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Client error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server error
      summary: Archive Customer
      tags:
      - Customer
tags:
- name: Customer
x-atomic:
  stacks:
    Customer:
      custom:
        Archive: {}
        Sort:
          requestSchema:
            $ref: '#/components/schemas/CustomerSort'
          type: collection
      filters:
      - $ref: '#/components/parameters/Email'
      schema:
        $ref: '#/components/schemas/Customer'
  version: 0.1.0
